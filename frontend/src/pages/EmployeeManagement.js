import React, { useState, useEffect } from 'react';
import axios from 'axios';
import '../css/style15.css'; // Importing CSS for the employee management table
import SlideBar from '../components/Slidebar';
import jsPDF from 'jspdf';
import 'jspdf-autotable'; // Importing autoTable for table generation
import { Link, useNavigate } from 'react-router-dom'; // Importing useNavigate
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faUser } from '@fortawesome/free-solid-svg-icons';
import logo from '../ES lo.png'; // Import logo

const EmployeeManagement = () => {
  const [employees, setEmployees] = useState([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');

  const navigate = useNavigate();

  // Fetch employee data from the backend
  useEffect(() => {
    axios.get('http://localhost:8070/employee/')
      .then((response) => {
        setEmployees(response.data);
        setLoading(false);
      })
      .catch((error) => {
        console.error("Error fetching employee data:", error);
        setLoading(false);
      });
  }, []);

  // Handle delete request
  const handleDelete = (id) => {
    axios.delete(`http://localhost:8070/employee/delete/${id}`)
      .then(() => {
        setEmployees(employees.filter(employee => employee._id !== id));
      })
      .catch((error) => {
        console.error(`Error deleting employee with id ${id}:`, error);
      });
  };

  // Filter employees based on search input
  const filteredEmployees = employees.filter((employee) =>
    employee.fullName?.toLowerCase().includes(searchTerm.toLowerCase()) ||
    employee.employeeID?.toLowerCase().includes(searchTerm.toLowerCase())
  );

  // Generate PDF of the employee table
  const downloadPDF = () => {
    const doc = new jsPDF();
    doc.setFontSize(18);

    // Add logo
    doc.addImage(logo, 'PNG', 14, 20, 20, 20);

    // Add title
    doc.setFontSize(17);
    doc.text('WELCOME TO!', 40, 27);
    doc.setFontSize(24);
    doc.text('ES CUSTOMS PVT(LTD)', 40, 38);
    doc.setFontSize(20);
    doc.text('Employee Management Report', 14, 50);

    // Add current date and time
    const date = new Date();
    doc.setFontSize(12);
    doc.text(`Generated on: ${date.toLocaleString()}`, 14, 60);

    // Add contact information (aligned to the right)
    const contactInfo = `Contact: +94 77 726 0247\nEmail: info@ecustoms39@gmail.com\nAddress: 21 Main Street, Jaela, Sri Lanka`;
    doc.setFontSize(12);
    doc.text(contactInfo, 195, 50, { align: 'right' });

    const tableColumn = ["Employee ID", "Name", "National ID", "Contact", "Job Role", "Specialized Skills"];
    const tableRows = [];

    filteredEmployees.forEach(employee => {
      const employeeData = [
        employee.employeeID || 'N/A',
        employee.fullName || 'N/A',
        employee.nationalID || 'N/A',
        employee.contactNumber || 'N/A',
        employee.jobRole || 'N/A',
        employee.specializedSkills || 'N/A',
      ];
      tableRows.push(employeeData);
    });

    // Generate colorful table using autoTable
    doc.autoTable({
      startY: 70,
      head: [tableColumn],
      body: tableRows,
      theme: 'grid',
      headStyles: { fillColor: [71, 201, 255] },
      alternateRowStyles: { fillColor: [239, 239, 239] },
      styles: { fontSize: 10, cellPadding: 3 },
    });

    // Add footer with centered text
    doc.setFontSize(10);
    const pageHeight = doc.internal.pageSize.height;
    doc.text('Generated by ES Customs System', 105, pageHeight - 10, { align: 'center' });

    doc.save('Employee_Management_Report.pdf');
  };

  if (loading) {
    return <p>Loading employee data...</p>;
  }

  return (
    <div>
      <SlideBar />
      <div className="employee-management">
        <h1>Employee <span>Management</span></h1>

        {/* Search bar */}
        <form className="search">
          <input
            type="text"
            className="search__input"
            placeholder="Search Employee ID or Name"
            onChange={(e) => setSearchTerm(e.target.value)}
          />
        </form>

        {/* Employee table */}
        <table>
          <thead>
            <tr>
              <th>Employee ID</th>
              <th>Name</th>
              <th>National ID</th>
              <th>Contact Number</th>
              <th>Job Role</th>
              <th>Specialized Skills</th> {/* New column */}
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            {filteredEmployees.map((employee) => (
              <tr key={employee._id}>
                <td>{employee.employeeID || 'N/A'}</td>
                <td>{employee.fullName || 'N/A'}</td>
                <td>{employee.nationalID || 'N/A'}</td>
                <td>{employee.contactNumber || 'N/A'}</td>
                <td>{employee.jobRole || 'N/A'}</td>
                <td>{employee.specializedSkills || 'N/A'}</td> {/* Displaying new field */}
                <td>
                  <button onClick={() => handleDelete(employee._id)} className="btn-delete">Delete</button>
                  <Link to={`/employee/profile/${employee._id}`} className="icon-button">
                    <FontAwesomeIcon icon={faUser} />
                  </Link>
                </td>
              </tr>
            ))}
          </tbody>
        </table>

        {/* PDF Download button */}
        <button onClick={downloadPDF} className="btn-download-pdf">
          Download PDF
        </button>

        <div className="done-jobs-container">
          <button className="cta" onClick={() => navigate("/Employee")}>
            <span className="hover-underline-animation">Add Member</span>
            <svg
              id="arrow-horizontal"
              xmlns="http://www.w3.org/2000/svg"
              width="30"
              height="10"
              viewBox="0 0 46 16"
              fill="white"
            >
              <path
                id="Path_10"
                data-name="Path 10"
                d="M8,0,6.545,1.455l5.506,5.506H-30V9.039H12.052L6.545,14.545,8,16l8-8Z"
                transform="translate(30)"
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  );
};

export default EmployeeManagement;
